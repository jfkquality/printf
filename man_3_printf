.TH _printf "3" "26 July 2019" "0.01" "_printf man page"
.SH NAME
.B _printf
.SH SYNOPSIS
.B #include "holberton.h"
.B int _printf(const char *\fIformat\fR, ...);
.SH DESCRIPTION
The \fB_printf()\fR function produces output according to a \fIformat\fR. The \fB_printf()\fR function writes to the standard output stream.
.SS Format of the format string
The format string is a character string. The format string is composed of zero or more directives: ordinary characters (not \fB%\fR), which are copied unchanged to the output stream; and conversion specifications each of which results in fetching zero or more subsequent arguments. Conversion specifications are introduced with the \fB%\fR character, and ends with a \fIconversion specifier\fR. In between there may be (in this order) zero or more \fIflags\fR, an optional minimum \fIfield width\fR, optional \fIpercision\fR, and an optional \fIlength modifier\fR.
.SS Flag characters
The characer % is followed by zero or more flags:
.TP
.B 0
The value shoukd be zero padded. The converted value from most cenversion specifiers is padded on the left with zeros rather than blanks.
.SS Length modifier
Here, "integer conversion" stands for \fBd\fR, \dBi\fR, \fBo\fR, \fBu\fR, \fBx\fR, or \fBX\fR conversion.
.TP
.B h
A following integer conversion corresponds to a \fIshort int\fR or \fIunsigned short int\fR argument, or a following \fBn\fR conversion corresponds to a pointer to a \fIshort int\fR argument.
.TP
.B l
A following integer conversion corresponds to a \fIlong int\fR or \fIunsigned long int\fR argument, or a following \fBn\fR conversion corresponds to a pointer to a \fIlong int\fR argument.
.SS Conversion specifiers
A character that specifies the type of conversion to be applied.
.TP
.B c
A \fIchar\fR, and the resulting character is written.
.TP
.B s
A \fIchar *\fR argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte.
.TP
.B %
A '%' is writen. No argument is converted.
.TP
.B d, i
An \fIint\fR argument of signed decimal notation. This gives the minimum number of digits that must appear.
.TP
.B o, u x, X
Arugment converted to unsisigned octal(\fBo\fR), unsigned decimal (\fBu\fR), or unsigned hexadecimal (\fBx\fR and \fBX\fR) notation. The letters \fBabcdef\fR are used for \fBx\fR conversion and the letters \fBABCDEF\fR are used for \fBX\fR conversions.
.TP
.B p
The \fIvoid *\fR pointer argument is printed in hexadecimal.
.TP
.B r
Similar to conversion argument \fBs\fR. A \fIchar *\fR argument is expected to be a pointer to an array of character type (pointer to a string) but in reverse order.
.TP
.B R
Similar to conversion argument \fBs\fR. A \fIchar *\fR argument is expected to be a pointer to an array of character type (pointer to a string) but alphabetical characters are rotated by 13 characters in the alphabet.
.SH Return value
Upon successful return, the function returns the number of characters printed (excluding the null byte used to end the output to strings).

If an output error occurs, -1 is returned.
.SH BUGS
It might work, it might not.
Probably alot of bugs.
Still under development.
.SH EXAMPLES
To print a character:

   #include "holberton.h"
   _printf("%c", character);

To print a string:

   #include "holberton.h"
   _printf("%s", string);

and

   #include "holberton.h"
   _printf("string to be printed");

To print a '%':

   #include "holberton.h"
   _printf("%%");

To print an integer or decimal:

   #include "holberton.h"
   _printf("%i or %d", integer, decimal);

To print in octal notation:

   #include "holberton.h"
   _printf("%o", octal);

To print an unsigned integer:

   #include "holberton.h"
   _printf("%u", unsigned_int);

To print in hexadecimal notation (lowercase and uppercase):

   #include "holberton.h"
   _printf("%x and %X", lower_hex, upper_hex);

To print a void pointer:

   #include "holberton.h"
   _printf("%p", pointer);

To print a string in reverse:

   #include "holberton.h"
   _printf("%r", string);

To print a string with rot13:

   #include "holberton.h"
   _printf("%R", string);

.SH SEE ALSO
printf(3)
.SH AUTHOR
Mitchell Moscovics, John Knight